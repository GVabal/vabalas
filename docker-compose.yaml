services:
  reverse-proxy:
    restart: always
    image: traefik:v3.2.0
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 7168m
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=vabalas@vabalas.my.id"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.webinsecure.address=:80"
      - "--entrypoints.webinsecure.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.webinsecure.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.webinsecure.http.redirections.entrypoint.permanent=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
  backend:
    depends_on:
      - reverse-proxy
    restart: always
    image: backend:latest
    build: ./backend
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 7168m
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.routers.backend.rule=Host(`vabalas.my.id`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.middlewares=cors"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://vabalas.my.id"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
    environment:
      SPRING_PROFILES_ACTIVE: "prod"
      PORT: "80"
volumes:
  letsencrypt:
