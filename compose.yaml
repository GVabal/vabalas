volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  sqlserver_int_data:
    driver: local
  sqlserver_se_data:
    driver: local
  sqlserver_dk_data:
    driver: local
  logs:
    driver: local

networks:
  sqlserver_int_network:
    driver: bridge
  sqlserver_se_network:
    driver: bridge
  sqlserver_dk_network:
    driver: bridge
  caddy_network:
    driver: bridge

services:
  preparation:
    depends_on:
      sqlserver_int:
        condition: service_started
    restart: always
    image: preparation:latest
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./logs/preparation:/logs/preparation
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      - caddy_network
      - sqlserver_int_network
    environment:
      PORT: "8000"

  execution_se:
    depends_on:
      sqlserver_se:
        condition: service_started
    restart: always
    image: execution:latest
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./logs/execution_se:/logs/execution_se
    ports:
      - "127.0.0.1:9000:9000"
    networks:
      - caddy_network
      - sqlserver_se_network
    environment:
      PORT: "9000"
      COUNTRY_CODE: "SE"

  execution_dk:
    depends_on:
      sqlserver_dk:
        condition: service_started
    restart: always
    image: execution:latest
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./logs/execution_dk:/logs/execution_dk
    ports:
      - "127.0.0.1:10000:10000"
    networks:
      - caddy_network
      - sqlserver_se_network
    environment:
      PORT: "10000"
      COUNTRY_CODE: "DK"

  caddy:
    depends_on:
      - preparation
      - execution_se
      - execution_dk
    restart: unless-stopped
    image: caddy/caddy:latest
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    networks:
      - caddy_network

